/*
* generated by Xtext
*/

package com.devoxx2012.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class IzpackGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class InstallerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Installer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInstallerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdentificationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdentificationIdentificationParserRuleCall_1_0 = (RuleCall)cIdentificationAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cByKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAuthorsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAuthorsAuthorParserRuleCall_2_1_0 = (RuleCall)cAuthorsAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cConstraintsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cConstraintAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cConstraintConstraintParserRuleCall_3_1_0 = (RuleCall)cConstraintAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUninstallKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Keyword cNoKeyword_4_1_0 = (Keyword)cAlternatives_4_1.eContents().get(0);
		private final Assignment cUninstallAssignment_4_1_1 = (Assignment)cAlternatives_4_1.eContents().get(1);
		private final RuleCall cUninstallUninstallParserRuleCall_4_1_1_0 = (RuleCall)cUninstallAssignment_4_1_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLogOnKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSummarylogAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSummarylogSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cSummarylogAssignment_5_1.eContents().get(0);
		private final Assignment cInstallationAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final Keyword cInstallationWriteInstallationInfoKeyword_5_2_0 = (Keyword)cInstallationAssignment_5_2.eContents().get(0);
		private final Assignment cPackagingAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPackagingPackagingParserRuleCall_6_0 = (RuleCall)cPackagingAssignment_6.eContents().get(0);
		private final Assignment cVariablesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVariablesVariableParserRuleCall_7_0 = (RuleCall)cVariablesAssignment_7.eContents().get(0);
		private final Assignment cPacksAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPacksPackParserRuleCall_8_0 = (RuleCall)cPacksAssignment_8.eContents().get(0);
		private final Assignment cLocaleAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cLocaleLocaleParserRuleCall_9_0 = (RuleCall)cLocaleAssignment_9.eContents().get(0);
		private final Keyword cDisplayKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cPanelsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPanelsPanelParserRuleCall_11_0 = (RuleCall)cPanelsAssignment_11.eContents().get(0);
		
		//Installer:
		//	"installer" identification=Identification ("by" authors+=Author*)? ("constraints" constraint=Constraint)? ("uninstall"
		//	("no" | uninstall=Uninstall))? ("log on" summarylog=STRING installation?="write installation info"?)?
		//	packaging=Packaging? variables+=Variable* packs+=Pack+ locale=Locale "display" panels+=Panel+;
		public ParserRule getRule() { return rule; }

		//"installer" identification=Identification ("by" authors+=Author*)? ("constraints" constraint=Constraint)? ("uninstall"
		//("no" | uninstall=Uninstall))? ("log on" summarylog=STRING installation?="write installation info"?)?
		//packaging=Packaging? variables+=Variable* packs+=Pack+ locale=Locale "display" panels+=Panel+
		public Group getGroup() { return cGroup; }

		//"installer"
		public Keyword getInstallerKeyword_0() { return cInstallerKeyword_0; }

		//identification=Identification
		public Assignment getIdentificationAssignment_1() { return cIdentificationAssignment_1; }

		//Identification
		public RuleCall getIdentificationIdentificationParserRuleCall_1_0() { return cIdentificationIdentificationParserRuleCall_1_0; }

		//("by" authors+=Author*)?
		public Group getGroup_2() { return cGroup_2; }

		//"by"
		public Keyword getByKeyword_2_0() { return cByKeyword_2_0; }

		//authors+=Author*
		public Assignment getAuthorsAssignment_2_1() { return cAuthorsAssignment_2_1; }

		//Author
		public RuleCall getAuthorsAuthorParserRuleCall_2_1_0() { return cAuthorsAuthorParserRuleCall_2_1_0; }

		//("constraints" constraint=Constraint)?
		public Group getGroup_3() { return cGroup_3; }

		//"constraints"
		public Keyword getConstraintsKeyword_3_0() { return cConstraintsKeyword_3_0; }

		//constraint=Constraint
		public Assignment getConstraintAssignment_3_1() { return cConstraintAssignment_3_1; }

		//Constraint
		public RuleCall getConstraintConstraintParserRuleCall_3_1_0() { return cConstraintConstraintParserRuleCall_3_1_0; }

		//("uninstall" ("no" | uninstall=Uninstall))?
		public Group getGroup_4() { return cGroup_4; }

		//"uninstall"
		public Keyword getUninstallKeyword_4_0() { return cUninstallKeyword_4_0; }

		//"no" | uninstall=Uninstall
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }

		//"no"
		public Keyword getNoKeyword_4_1_0() { return cNoKeyword_4_1_0; }

		//uninstall=Uninstall
		public Assignment getUninstallAssignment_4_1_1() { return cUninstallAssignment_4_1_1; }

		//Uninstall
		public RuleCall getUninstallUninstallParserRuleCall_4_1_1_0() { return cUninstallUninstallParserRuleCall_4_1_1_0; }

		//("log on" summarylog=STRING installation?="write installation info"?)?
		public Group getGroup_5() { return cGroup_5; }

		//"log on"
		public Keyword getLogOnKeyword_5_0() { return cLogOnKeyword_5_0; }

		//summarylog=STRING
		public Assignment getSummarylogAssignment_5_1() { return cSummarylogAssignment_5_1; }

		//STRING
		public RuleCall getSummarylogSTRINGTerminalRuleCall_5_1_0() { return cSummarylogSTRINGTerminalRuleCall_5_1_0; }

		//installation?="write installation info"?
		public Assignment getInstallationAssignment_5_2() { return cInstallationAssignment_5_2; }

		//"write installation info"
		public Keyword getInstallationWriteInstallationInfoKeyword_5_2_0() { return cInstallationWriteInstallationInfoKeyword_5_2_0; }

		//packaging=Packaging?
		public Assignment getPackagingAssignment_6() { return cPackagingAssignment_6; }

		//Packaging
		public RuleCall getPackagingPackagingParserRuleCall_6_0() { return cPackagingPackagingParserRuleCall_6_0; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_7() { return cVariablesAssignment_7; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_7_0() { return cVariablesVariableParserRuleCall_7_0; }

		//packs+=Pack+
		public Assignment getPacksAssignment_8() { return cPacksAssignment_8; }

		//Pack
		public RuleCall getPacksPackParserRuleCall_8_0() { return cPacksPackParserRuleCall_8_0; }

		//locale=Locale
		public Assignment getLocaleAssignment_9() { return cLocaleAssignment_9; }

		//Locale
		public RuleCall getLocaleLocaleParserRuleCall_9_0() { return cLocaleLocaleParserRuleCall_9_0; }

		//"display"
		public Keyword getDisplayKeyword_10() { return cDisplayKeyword_10; }

		//panels+=Panel+
		public Assignment getPanelsAssignment_11() { return cPanelsAssignment_11; }

		//Panel
		public RuleCall getPanelsPanelParserRuleCall_11_0() { return cPanelsPanelParserRuleCall_11_0; }
	}

	public class LocaleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Locale");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLocaleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIsocodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIsocodesISO3CodeEnumRuleCall_1_0 = (RuleCall)cIsocodesAssignment_1.eContents().get(0);
		
		//Locale:
		//	"locale" isocodes+=ISO3Code+;
		public ParserRule getRule() { return rule; }

		//"locale" isocodes+=ISO3Code+
		public Group getGroup() { return cGroup; }

		//"locale"
		public Keyword getLocaleKeyword_0() { return cLocaleKeyword_0; }

		//isocodes+=ISO3Code+
		public Assignment getIsocodesAssignment_1() { return cIsocodesAssignment_1; }

		//ISO3Code
		public RuleCall getIsocodesISO3CodeEnumRuleCall_1_0() { return cIsocodesISO3CodeEnumRuleCall_1_0; }
	}

	public class IdentificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Identification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVersionSTRINGTerminalRuleCall_2_0 = (RuleCall)cVersionAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSiteKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUrlAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUrlSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cUrlAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWebrootKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cWebdirAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cWebdirSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cWebdirAssignment_4_1.eContents().get(0);
		
		//Identification:
		//	"for" name=STRING version=STRING ("site" url=STRING)? ("webroot" webdir=STRING)?;
		public ParserRule getRule() { return rule; }

		//"for" name=STRING version=STRING ("site" url=STRING)? ("webroot" webdir=STRING)?
		public Group getGroup() { return cGroup; }

		//"for"
		public Keyword getForKeyword_0() { return cForKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//version=STRING
		public Assignment getVersionAssignment_2() { return cVersionAssignment_2; }

		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_2_0() { return cVersionSTRINGTerminalRuleCall_2_0; }

		//("site" url=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"site"
		public Keyword getSiteKeyword_3_0() { return cSiteKeyword_3_0; }

		//url=STRING
		public Assignment getUrlAssignment_3_1() { return cUrlAssignment_3_1; }

		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_3_1_0() { return cUrlSTRINGTerminalRuleCall_3_1_0; }

		//("webroot" webdir=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"webroot"
		public Keyword getWebrootKeyword_4_0() { return cWebrootKeyword_4_0; }

		//webdir=STRING
		public Assignment getWebdirAssignment_4_1() { return cWebdirAssignment_4_1; }

		//STRING
		public RuleCall getWebdirSTRINGTerminalRuleCall_4_1_0() { return cWebdirSTRINGTerminalRuleCall_4_1_0; }
	}

	public class AuthorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Author");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cEmailAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEmailSTRINGTerminalRuleCall_1_0 = (RuleCall)cEmailAssignment_1.eContents().get(0);
		
		//Author:
		//	name=STRING email=STRING;
		public ParserRule getRule() { return rule; }

		//name=STRING email=STRING
		public Group getGroup() { return cGroup; }

		//name=STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }

		//email=STRING
		public Assignment getEmailAssignment_1() { return cEmailAssignment_1; }

		//STRING
		public RuleCall getEmailSTRINGTerminalRuleCall_1_0() { return cEmailSTRINGTerminalRuleCall_1_0; }
	}

	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cJavaversionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cJavaversionSTRINGTerminalRuleCall_0_0 = (RuleCall)cJavaversionAssignment_0.eContents().get(0);
		private final Assignment cRequiredJdkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cRequiredJdkWithJdkKeyword_1_0 = (Keyword)cRequiredJdkAssignment_1.eContents().get(0);
		private final Assignment cPackedAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cPackedPackedKeyword_2_0 = (Keyword)cPackedAssignment_2.eContents().get(0);
		
		//Constraint:
		//	javaversion=STRING requiredJdk?="with jdk"? packed?="packed"?;
		public ParserRule getRule() { return rule; }

		//javaversion=STRING requiredJdk?="with jdk"? packed?="packed"?
		public Group getGroup() { return cGroup; }

		//javaversion=STRING
		public Assignment getJavaversionAssignment_0() { return cJavaversionAssignment_0; }

		//STRING
		public RuleCall getJavaversionSTRINGTerminalRuleCall_0_0() { return cJavaversionSTRINGTerminalRuleCall_0_0; }

		//requiredJdk?="with jdk"?
		public Assignment getRequiredJdkAssignment_1() { return cRequiredJdkAssignment_1; }

		//"with jdk"
		public Keyword getRequiredJdkWithJdkKeyword_1_0() { return cRequiredJdkWithJdkKeyword_1_0; }

		//packed?="packed"?
		public Assignment getPackedAssignment_2() { return cPackedAssignment_2; }

		//"packed"
		public Keyword getPackedPackedKeyword_2_0() { return cPackedPackedKeyword_2_0; }
	}

	public class UninstallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Uninstall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cNamedKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cPathKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPathAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPathSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cPathAssignment_1_1.eContents().get(0);
		
		//Uninstall:
		//	("named" name=STRING)? / *("only if" condition=ID)? * / ("path" path=STRING)?;
		public ParserRule getRule() { return rule; }

		//("named" name=STRING)? / *("only if" condition=ID)? * / ("path" path=STRING)?
		public Group getGroup() { return cGroup; }

		//("named" name=STRING)?
		public Group getGroup_0() { return cGroup_0; }

		//"named"
		public Keyword getNamedKeyword_0_0() { return cNamedKeyword_0_0; }

		//name=STRING
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_1_0() { return cNameSTRINGTerminalRuleCall_0_1_0; }

		//("path" path=STRING)?
		public Group getGroup_1() { return cGroup_1; }

		//"path"
		public Keyword getPathKeyword_1_0() { return cPathKeyword_1_0; }

		//path=STRING
		public Assignment getPathAssignment_1_1() { return cPathAssignment_1_1; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_1_1_0() { return cPathSTRINGTerminalRuleCall_1_1_0; }
	}

	public class OptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Option");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Option:
		//	name=STRING "=" value=STRING;
		public ParserRule getRule() { return rule; }

		//name=STRING "=" value=STRING
		public Group getGroup() { return cGroup; }

		//name=STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}

	public class PackagingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Packaging");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackagingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassJvmTypeReferenceParserRuleCall_1_0 = (RuleCall)cClassAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cOptionsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOptionsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOptionsOptionParserRuleCall_2_1_0 = (RuleCall)cOptionsAssignment_2_1.eContents().get(0);
		
		//Packaging:
		//	"packaging" class=JvmTypeReference ("options" options+=Option*)?;
		public ParserRule getRule() { return rule; }

		//"packaging" class=JvmTypeReference ("options" options+=Option*)?
		public Group getGroup() { return cGroup; }

		//"packaging"
		public Keyword getPackagingKeyword_0() { return cPackagingKeyword_0; }

		//class=JvmTypeReference
		public Assignment getClassAssignment_1() { return cClassAssignment_1; }

		//JvmTypeReference
		public RuleCall getClassJvmTypeReferenceParserRuleCall_1_0() { return cClassJvmTypeReferenceParserRuleCall_1_0; }

		//("options" options+=Option*)?
		public Group getGroup_2() { return cGroup_2; }

		//"options"
		public Keyword getOptionsKeyword_2_0() { return cOptionsKeyword_2_0; }

		//options+=Option*
		public Assignment getOptionsAssignment_2_1() { return cOptionsAssignment_2_1; }

		//Option
		public RuleCall getOptionsOptionParserRuleCall_2_1_0() { return cOptionsOptionParserRuleCall_2_1_0; }
	}

	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cValKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Assignment cIsDynamicAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cIsDynamicVarKeyword_0_1_0 = (Keyword)cIsDynamicAssignment_0_1.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//Variable:
		//	("val" | isDynamic?="var") name=ID "=" value=STRING;
		public ParserRule getRule() { return rule; }

		//("val" | isDynamic?="var") name=ID "=" value=STRING
		public Group getGroup() { return cGroup; }

		//"val" | isDynamic?="var"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"val"
		public Keyword getValKeyword_0_0() { return cValKeyword_0_0; }

		//isDynamic?="var"
		public Assignment getIsDynamicAssignment_0_1() { return cIsDynamicAssignment_0_1; }

		//"var"
		public Keyword getIsDynamicVarKeyword_0_1_0() { return cIsDynamicVarKeyword_0_1_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=STRING
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0() { return cValueSTRINGTerminalRuleCall_3_0; }
	}

	public class PackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Pack");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelSTRINGTerminalRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		private final Assignment cOptionalAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cOptionalOptionalKeyword_3_0 = (Keyword)cOptionalAssignment_3.eContents().get(0);
		private final Assignment cLooseAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cLooseLooseKeyword_4_0 = (Keyword)cLooseAssignment_4.eContents().get(0);
		private final Assignment cKeepAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cKeepKeepKeyword_5_0 = (Keyword)cKeepAssignment_5.eContents().get(0);
		private final Assignment cParentAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cParentPackCrossReference_6_0 = (CrossReference)cParentAssignment_6.eContents().get(0);
		private final RuleCall cParentPackIDTerminalRuleCall_6_0_1 = (RuleCall)cParentPackCrossReference_6_0.eContents().get(1);
		private final Assignment cFilesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFilesFileParserRuleCall_7_0 = (RuleCall)cFilesAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cOnKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cOsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cOsOSEnumRuleCall_8_1_0 = (RuleCall)cOsAssignment_8_1.eContents().get(0);
		
		//Pack:
		//	"pack" name=ID label=STRING optional?="optional"? loose?="loose"? keep?="keep"? parent=[Pack]? files+=File* ("on"
		//	os=OS)?;
		public ParserRule getRule() { return rule; }

		//"pack" name=ID label=STRING optional?="optional"? loose?="loose"? keep?="keep"? parent=[Pack]? files+=File* ("on"
		//os=OS)?
		public Group getGroup() { return cGroup; }

		//"pack"
		public Keyword getPackKeyword_0() { return cPackKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//label=STRING
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_2_0() { return cLabelSTRINGTerminalRuleCall_2_0; }

		//optional?="optional"?
		public Assignment getOptionalAssignment_3() { return cOptionalAssignment_3; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_3_0() { return cOptionalOptionalKeyword_3_0; }

		//loose?="loose"?
		public Assignment getLooseAssignment_4() { return cLooseAssignment_4; }

		//"loose"
		public Keyword getLooseLooseKeyword_4_0() { return cLooseLooseKeyword_4_0; }

		//keep?="keep"?
		public Assignment getKeepAssignment_5() { return cKeepAssignment_5; }

		//"keep"
		public Keyword getKeepKeepKeyword_5_0() { return cKeepKeepKeyword_5_0; }

		//parent=[Pack]?
		public Assignment getParentAssignment_6() { return cParentAssignment_6; }

		//[Pack]
		public CrossReference getParentPackCrossReference_6_0() { return cParentPackCrossReference_6_0; }

		//ID
		public RuleCall getParentPackIDTerminalRuleCall_6_0_1() { return cParentPackIDTerminalRuleCall_6_0_1; }

		//files+=File*
		public Assignment getFilesAssignment_7() { return cFilesAssignment_7; }

		//File
		public RuleCall getFilesFileParserRuleCall_7_0() { return cFilesFileParserRuleCall_7_0; }

		//("on" os=OS)?
		public Group getGroup_8() { return cGroup_8; }

		//"on"
		public Keyword getOnKeyword_8_0() { return cOnKeyword_8_0; }

		//os=OS
		public Assignment getOsAssignment_8_1() { return cOsAssignment_8_1; }

		//OS
		public RuleCall getOsOSEnumRuleCall_8_1_0() { return cOsOSEnumRuleCall_8_1_0; }
	}

	public class FileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "File");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPathAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPathSTRINGTerminalRuleCall_0_0 = (RuleCall)cPathAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAliasAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAliasSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cAliasAssignment_1_1.eContents().get(0);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDestinationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDestinationSTRINGTerminalRuleCall_3_0 = (RuleCall)cDestinationAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOverrideKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOverrideAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOverrideOverrideFlagEnumRuleCall_4_1_0 = (RuleCall)cOverrideAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cGroup_5.eContents().get(0);
		private final Keyword cOnKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Assignment cOsAssignment_5_0_1 = (Assignment)cGroup_5_0.eContents().get(1);
		private final RuleCall cOsOSEnumRuleCall_5_0_1_0 = (RuleCall)cOsAssignment_5_0_1.eContents().get(0);
		
		//File:
		//	path=STRING ("as" alias=STRING)? "to" destination=STRING ("override" override=OverrideFlag)? => ("on" os=OS)?;
		public ParserRule getRule() { return rule; }

		//path=STRING ("as" alias=STRING)? "to" destination=STRING ("override" override=OverrideFlag)? => ("on" os=OS)?
		public Group getGroup() { return cGroup; }

		//path=STRING
		public Assignment getPathAssignment_0() { return cPathAssignment_0; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_0_0() { return cPathSTRINGTerminalRuleCall_0_0; }

		//("as" alias=STRING)?
		public Group getGroup_1() { return cGroup_1; }

		//"as"
		public Keyword getAsKeyword_1_0() { return cAsKeyword_1_0; }

		//alias=STRING
		public Assignment getAliasAssignment_1_1() { return cAliasAssignment_1_1; }

		//STRING
		public RuleCall getAliasSTRINGTerminalRuleCall_1_1_0() { return cAliasSTRINGTerminalRuleCall_1_1_0; }

		//"to"
		public Keyword getToKeyword_2() { return cToKeyword_2; }

		//destination=STRING
		public Assignment getDestinationAssignment_3() { return cDestinationAssignment_3; }

		//STRING
		public RuleCall getDestinationSTRINGTerminalRuleCall_3_0() { return cDestinationSTRINGTerminalRuleCall_3_0; }

		//("override" override=OverrideFlag)?
		public Group getGroup_4() { return cGroup_4; }

		//"override"
		public Keyword getOverrideKeyword_4_0() { return cOverrideKeyword_4_0; }

		//override=OverrideFlag
		public Assignment getOverrideAssignment_4_1() { return cOverrideAssignment_4_1; }

		//OverrideFlag
		public RuleCall getOverrideOverrideFlagEnumRuleCall_4_1_0() { return cOverrideOverrideFlagEnumRuleCall_4_1_0; }

		//=> ("on" os=OS)?
		public Group getGroup_5() { return cGroup_5; }

		//"on" os=OS
		public Group getGroup_5_0() { return cGroup_5_0; }

		//"on"
		public Keyword getOnKeyword_5_0_0() { return cOnKeyword_5_0_0; }

		//os=OS
		public Assignment getOsAssignment_5_0_1() { return cOsAssignment_5_0_1; }

		//OS
		public RuleCall getOsOSEnumRuleCall_5_0_1_0() { return cOsOSEnumRuleCall_5_0_1_0; }
	}

	public class PanelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Panel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cClassnameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassnameJvmTypeReferenceParserRuleCall_1_0 = (RuleCall)cClassnameAssignment_1.eContents().get(0);
		private final Assignment cJarAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cJarSTRINGTerminalRuleCall_2_0 = (RuleCall)cJarAssignment_2.eContents().get(0);
		
		//Panel:
		//	name=ID classname=JvmTypeReference jar=STRING;
		public ParserRule getRule() { return rule; }

		//name=ID classname=JvmTypeReference jar=STRING
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//classname=JvmTypeReference
		public Assignment getClassnameAssignment_1() { return cClassnameAssignment_1; }

		//JvmTypeReference
		public RuleCall getClassnameJvmTypeReferenceParserRuleCall_1_0() { return cClassnameJvmTypeReferenceParserRuleCall_1_0; }

		//jar=STRING
		public Assignment getJarAssignment_2() { return cJarAssignment_2; }

		//STRING
		public RuleCall getJarSTRINGTerminalRuleCall_2_0() { return cJarSTRINGTerminalRuleCall_2_0; }
	}
	
	
	public class ISO3CodeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ISO3Code");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCatEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCatCatalunyanKeyword_0_0 = (Keyword)cCatEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cChnEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cChnChineseKeyword_1_0 = (Keyword)cChnEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCzeEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCzeCzechKeyword_2_0 = (Keyword)cCzeEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDanEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDanDanishKeyword_3_0 = (Keyword)cDanEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cGlgEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cGlgGalicianKeyword_4_0 = (Keyword)cGlgEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDeuEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDeuGermanKeyword_5_0 = (Keyword)cDeuEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cEngEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cEngEnglishKeyword_6_0 = (Keyword)cEngEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cEusEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cEusBasqueKeyword_7_0 = (Keyword)cEusEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cFinEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cFinFinnishKeyword_8_0 = (Keyword)cFinEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cFraEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cFraFrenchKeyword_9_0 = (Keyword)cFraEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cHunEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cHunHungarianKeyword_10_0 = (Keyword)cHunEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cItaEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cItaItalianKeyword_11_0 = (Keyword)cItaEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cJpnEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cJpnJapaneseKeyword_12_0 = (Keyword)cJpnEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cMysEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cMysMalaysianKeyword_13_0 = (Keyword)cMysEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cNedEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cNedNederlandsKeyword_14_0 = (Keyword)cNedEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cNorEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cNorNorwegianKeyword_15_0 = (Keyword)cNorEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cPolEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cPolPolnishKeyword_16_0 = (Keyword)cPolEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cPorEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cPorPortugueseBrazilianKeyword_17_0 = (Keyword)cPorEnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cPrtEnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cPrtPortugueseEuropeanKeyword_18_0 = (Keyword)cPrtEnumLiteralDeclaration_18.eContents().get(0);
		private final EnumLiteralDeclaration cRomEnumLiteralDeclaration_19 = (EnumLiteralDeclaration)cAlternatives.eContents().get(19);
		private final Keyword cRomRomanianKeyword_19_0 = (Keyword)cRomEnumLiteralDeclaration_19.eContents().get(0);
		private final EnumLiteralDeclaration cRusEnumLiteralDeclaration_20 = (EnumLiteralDeclaration)cAlternatives.eContents().get(20);
		private final Keyword cRusRussianKeyword_20_0 = (Keyword)cRusEnumLiteralDeclaration_20.eContents().get(0);
		private final EnumLiteralDeclaration cScgEnumLiteralDeclaration_21 = (EnumLiteralDeclaration)cAlternatives.eContents().get(21);
		private final Keyword cScgSerbianKeyword_21_0 = (Keyword)cScgEnumLiteralDeclaration_21.eContents().get(0);
		private final EnumLiteralDeclaration cSpaEnumLiteralDeclaration_22 = (EnumLiteralDeclaration)cAlternatives.eContents().get(22);
		private final Keyword cSpaSpanishKeyword_22_0 = (Keyword)cSpaEnumLiteralDeclaration_22.eContents().get(0);
		private final EnumLiteralDeclaration cSvkEnumLiteralDeclaration_23 = (EnumLiteralDeclaration)cAlternatives.eContents().get(23);
		private final Keyword cSvkSlovakianKeyword_23_0 = (Keyword)cSvkEnumLiteralDeclaration_23.eContents().get(0);
		private final EnumLiteralDeclaration cSweEnumLiteralDeclaration_24 = (EnumLiteralDeclaration)cAlternatives.eContents().get(24);
		private final Keyword cSweSwedishKeyword_24_0 = (Keyword)cSweEnumLiteralDeclaration_24.eContents().get(0);
		private final EnumLiteralDeclaration cUkrEnumLiteralDeclaration_25 = (EnumLiteralDeclaration)cAlternatives.eContents().get(25);
		private final Keyword cUkrUkrainianKeyword_25_0 = (Keyword)cUkrEnumLiteralDeclaration_25.eContents().get(0);
		
		//enum ISO3Code:
		//	cat="Catalunyan" | chn="Chinese" | cze="Czech" | dan="Danish" | glg="Galician" | deu="German" | eng="English" |
		//	eus="Basque" | fin="Finnish" | fra="French" | hun="Hungarian" | ita="Italian" | jpn="Japanese" | mys="Malaysian" |
		//	ned="Nederlands" | nor="Norwegian" | pol="Polnish" | por="Portuguese (Brazilian)" | prt="Portuguese (European)" |
		//	rom="Romanian" | rus="Russian" | scg="Serbian" | spa="Spanish" | svk="Slovakian" | swe="Swedish" | ukr="Ukrainian";
		public EnumRule getRule() { return rule; }

		//cat="Catalunyan" | chn="Chinese" | cze="Czech" | dan="Danish" | glg="Galician" | deu="German" | eng="English" |
		//eus="Basque" | fin="Finnish" | fra="French" | hun="Hungarian" | ita="Italian" | jpn="Japanese" | mys="Malaysian" |
		//ned="Nederlands" | nor="Norwegian" | pol="Polnish" | por="Portuguese (Brazilian)" | prt="Portuguese (European)" |
		//rom="Romanian" | rus="Russian" | scg="Serbian" | spa="Spanish" | svk="Slovakian" | swe="Swedish" | ukr="Ukrainian"
		public Alternatives getAlternatives() { return cAlternatives; }

		//cat="Catalunyan"
		public EnumLiteralDeclaration getCatEnumLiteralDeclaration_0() { return cCatEnumLiteralDeclaration_0; }

		//"Catalunyan"
		public Keyword getCatCatalunyanKeyword_0_0() { return cCatCatalunyanKeyword_0_0; }

		//chn="Chinese"
		public EnumLiteralDeclaration getChnEnumLiteralDeclaration_1() { return cChnEnumLiteralDeclaration_1; }

		//"Chinese"
		public Keyword getChnChineseKeyword_1_0() { return cChnChineseKeyword_1_0; }

		//cze="Czech"
		public EnumLiteralDeclaration getCzeEnumLiteralDeclaration_2() { return cCzeEnumLiteralDeclaration_2; }

		//"Czech"
		public Keyword getCzeCzechKeyword_2_0() { return cCzeCzechKeyword_2_0; }

		//dan="Danish"
		public EnumLiteralDeclaration getDanEnumLiteralDeclaration_3() { return cDanEnumLiteralDeclaration_3; }

		//"Danish"
		public Keyword getDanDanishKeyword_3_0() { return cDanDanishKeyword_3_0; }

		//glg="Galician"
		public EnumLiteralDeclaration getGlgEnumLiteralDeclaration_4() { return cGlgEnumLiteralDeclaration_4; }

		//"Galician"
		public Keyword getGlgGalicianKeyword_4_0() { return cGlgGalicianKeyword_4_0; }

		//deu="German"
		public EnumLiteralDeclaration getDeuEnumLiteralDeclaration_5() { return cDeuEnumLiteralDeclaration_5; }

		//"German"
		public Keyword getDeuGermanKeyword_5_0() { return cDeuGermanKeyword_5_0; }

		//eng="English"
		public EnumLiteralDeclaration getEngEnumLiteralDeclaration_6() { return cEngEnumLiteralDeclaration_6; }

		//"English"
		public Keyword getEngEnglishKeyword_6_0() { return cEngEnglishKeyword_6_0; }

		//eus="Basque"
		public EnumLiteralDeclaration getEusEnumLiteralDeclaration_7() { return cEusEnumLiteralDeclaration_7; }

		//"Basque"
		public Keyword getEusBasqueKeyword_7_0() { return cEusBasqueKeyword_7_0; }

		//fin="Finnish"
		public EnumLiteralDeclaration getFinEnumLiteralDeclaration_8() { return cFinEnumLiteralDeclaration_8; }

		//"Finnish"
		public Keyword getFinFinnishKeyword_8_0() { return cFinFinnishKeyword_8_0; }

		//fra="French"
		public EnumLiteralDeclaration getFraEnumLiteralDeclaration_9() { return cFraEnumLiteralDeclaration_9; }

		//"French"
		public Keyword getFraFrenchKeyword_9_0() { return cFraFrenchKeyword_9_0; }

		//hun="Hungarian"
		public EnumLiteralDeclaration getHunEnumLiteralDeclaration_10() { return cHunEnumLiteralDeclaration_10; }

		//"Hungarian"
		public Keyword getHunHungarianKeyword_10_0() { return cHunHungarianKeyword_10_0; }

		//ita="Italian"
		public EnumLiteralDeclaration getItaEnumLiteralDeclaration_11() { return cItaEnumLiteralDeclaration_11; }

		//"Italian"
		public Keyword getItaItalianKeyword_11_0() { return cItaItalianKeyword_11_0; }

		//jpn="Japanese"
		public EnumLiteralDeclaration getJpnEnumLiteralDeclaration_12() { return cJpnEnumLiteralDeclaration_12; }

		//"Japanese"
		public Keyword getJpnJapaneseKeyword_12_0() { return cJpnJapaneseKeyword_12_0; }

		//mys="Malaysian"
		public EnumLiteralDeclaration getMysEnumLiteralDeclaration_13() { return cMysEnumLiteralDeclaration_13; }

		//"Malaysian"
		public Keyword getMysMalaysianKeyword_13_0() { return cMysMalaysianKeyword_13_0; }

		//ned="Nederlands"
		public EnumLiteralDeclaration getNedEnumLiteralDeclaration_14() { return cNedEnumLiteralDeclaration_14; }

		//"Nederlands"
		public Keyword getNedNederlandsKeyword_14_0() { return cNedNederlandsKeyword_14_0; }

		//nor="Norwegian"
		public EnumLiteralDeclaration getNorEnumLiteralDeclaration_15() { return cNorEnumLiteralDeclaration_15; }

		//"Norwegian"
		public Keyword getNorNorwegianKeyword_15_0() { return cNorNorwegianKeyword_15_0; }

		//pol="Polnish"
		public EnumLiteralDeclaration getPolEnumLiteralDeclaration_16() { return cPolEnumLiteralDeclaration_16; }

		//"Polnish"
		public Keyword getPolPolnishKeyword_16_0() { return cPolPolnishKeyword_16_0; }

		//por="Portuguese (Brazilian)"
		public EnumLiteralDeclaration getPorEnumLiteralDeclaration_17() { return cPorEnumLiteralDeclaration_17; }

		//"Portuguese (Brazilian)"
		public Keyword getPorPortugueseBrazilianKeyword_17_0() { return cPorPortugueseBrazilianKeyword_17_0; }

		//prt="Portuguese (European)"
		public EnumLiteralDeclaration getPrtEnumLiteralDeclaration_18() { return cPrtEnumLiteralDeclaration_18; }

		//"Portuguese (European)"
		public Keyword getPrtPortugueseEuropeanKeyword_18_0() { return cPrtPortugueseEuropeanKeyword_18_0; }

		//rom="Romanian"
		public EnumLiteralDeclaration getRomEnumLiteralDeclaration_19() { return cRomEnumLiteralDeclaration_19; }

		//"Romanian"
		public Keyword getRomRomanianKeyword_19_0() { return cRomRomanianKeyword_19_0; }

		//rus="Russian"
		public EnumLiteralDeclaration getRusEnumLiteralDeclaration_20() { return cRusEnumLiteralDeclaration_20; }

		//"Russian"
		public Keyword getRusRussianKeyword_20_0() { return cRusRussianKeyword_20_0; }

		//scg="Serbian"
		public EnumLiteralDeclaration getScgEnumLiteralDeclaration_21() { return cScgEnumLiteralDeclaration_21; }

		//"Serbian"
		public Keyword getScgSerbianKeyword_21_0() { return cScgSerbianKeyword_21_0; }

		//spa="Spanish"
		public EnumLiteralDeclaration getSpaEnumLiteralDeclaration_22() { return cSpaEnumLiteralDeclaration_22; }

		//"Spanish"
		public Keyword getSpaSpanishKeyword_22_0() { return cSpaSpanishKeyword_22_0; }

		//svk="Slovakian"
		public EnumLiteralDeclaration getSvkEnumLiteralDeclaration_23() { return cSvkEnumLiteralDeclaration_23; }

		//"Slovakian"
		public Keyword getSvkSlovakianKeyword_23_0() { return cSvkSlovakianKeyword_23_0; }

		//swe="Swedish"
		public EnumLiteralDeclaration getSweEnumLiteralDeclaration_24() { return cSweEnumLiteralDeclaration_24; }

		//"Swedish"
		public Keyword getSweSwedishKeyword_24_0() { return cSweSwedishKeyword_24_0; }

		//ukr="Ukrainian"
		public EnumLiteralDeclaration getUkrEnumLiteralDeclaration_25() { return cUkrEnumLiteralDeclaration_25; }

		//"Ukrainian"
		public Keyword getUkrUkrainianKeyword_25_0() { return cUkrUkrainianKeyword_25_0; }
	}

	public class OSElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cALLEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cALLAllKeyword_0_0 = (Keyword)cALLEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUNIXEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUNIXUnixKeyword_1_0 = (Keyword)cUNIXEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWINDOWSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWINDOWSWindowsKeyword_2_0 = (Keyword)cWINDOWSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMACEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMACMacKeyword_3_0 = (Keyword)cMACEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum OS:
		//	ALL="all" | UNIX="unix" | WINDOWS="windows" | MAC="mac";
		public EnumRule getRule() { return rule; }

		//ALL="all" | UNIX="unix" | WINDOWS="windows" | MAC="mac"
		public Alternatives getAlternatives() { return cAlternatives; }

		//ALL="all"
		public EnumLiteralDeclaration getALLEnumLiteralDeclaration_0() { return cALLEnumLiteralDeclaration_0; }

		//"all"
		public Keyword getALLAllKeyword_0_0() { return cALLAllKeyword_0_0; }

		//UNIX="unix"
		public EnumLiteralDeclaration getUNIXEnumLiteralDeclaration_1() { return cUNIXEnumLiteralDeclaration_1; }

		//"unix"
		public Keyword getUNIXUnixKeyword_1_0() { return cUNIXUnixKeyword_1_0; }

		//WINDOWS="windows"
		public EnumLiteralDeclaration getWINDOWSEnumLiteralDeclaration_2() { return cWINDOWSEnumLiteralDeclaration_2; }

		//"windows"
		public Keyword getWINDOWSWindowsKeyword_2_0() { return cWINDOWSWindowsKeyword_2_0; }

		//MAC="mac"
		public EnumLiteralDeclaration getMACEnumLiteralDeclaration_3() { return cMACEnumLiteralDeclaration_3; }

		//"mac"
		public Keyword getMACMacKeyword_3_0() { return cMACMacKeyword_3_0; }
	}

	public class OverrideFlagElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OverrideFlag");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTRUEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTRUETrueKeyword_0_0 = (Keyword)cTRUEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFALSEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFALSEFalseKeyword_1_0 = (Keyword)cFALSEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cASKTRUEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cASKTRUEAsktrueKeyword_2_0 = (Keyword)cASKTRUEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cASKFALSEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cASKFALSEAskfalseKeyword_3_0 = (Keyword)cASKFALSEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cUpdateEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cUpdateUpdateKeyword_4_0 = (Keyword)cUpdateEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum OverrideFlag:
		//	TRUE="true" | FALSE="false" | ASKTRUE="asktrue" | ASKFALSE="askfalse" | update;
		public EnumRule getRule() { return rule; }

		//TRUE="true" | FALSE="false" | ASKTRUE="asktrue" | ASKFALSE="askfalse" | update
		public Alternatives getAlternatives() { return cAlternatives; }

		//TRUE="true"
		public EnumLiteralDeclaration getTRUEEnumLiteralDeclaration_0() { return cTRUEEnumLiteralDeclaration_0; }

		//"true"
		public Keyword getTRUETrueKeyword_0_0() { return cTRUETrueKeyword_0_0; }

		//FALSE="false"
		public EnumLiteralDeclaration getFALSEEnumLiteralDeclaration_1() { return cFALSEEnumLiteralDeclaration_1; }

		//"false"
		public Keyword getFALSEFalseKeyword_1_0() { return cFALSEFalseKeyword_1_0; }

		//ASKTRUE="asktrue"
		public EnumLiteralDeclaration getASKTRUEEnumLiteralDeclaration_2() { return cASKTRUEEnumLiteralDeclaration_2; }

		//"asktrue"
		public Keyword getASKTRUEAsktrueKeyword_2_0() { return cASKTRUEAsktrueKeyword_2_0; }

		//ASKFALSE="askfalse"
		public EnumLiteralDeclaration getASKFALSEEnumLiteralDeclaration_3() { return cASKFALSEEnumLiteralDeclaration_3; }

		//"askfalse"
		public Keyword getASKFALSEAskfalseKeyword_3_0() { return cASKFALSEAskfalseKeyword_3_0; }

		//update
		public EnumLiteralDeclaration getUpdateEnumLiteralDeclaration_4() { return cUpdateEnumLiteralDeclaration_4; }

		//"update"
		public Keyword getUpdateUpdateKeyword_4_0() { return cUpdateUpdateKeyword_4_0; }
	}
	
	private InstallerElements pInstaller;
	private ISO3CodeElements unknownRuleISO3Code;
	private LocaleElements pLocale;
	private IdentificationElements pIdentification;
	private AuthorElements pAuthor;
	private ConstraintElements pConstraint;
	private UninstallElements pUninstall;
	private OptionElements pOption;
	private PackagingElements pPackaging;
	private VariableElements pVariable;
	private OSElements unknownRuleOS;
	private OverrideFlagElements unknownRuleOverrideFlag;
	private PackElements pPack;
	private FileElements pFile;
	private PanelElements pPanel;
	
	private final GrammarProvider grammarProvider;

	private XtypeGrammarAccess gaXtype;

	@Inject
	public IzpackGrammarAccess(GrammarProvider grammarProvider,
		XtypeGrammarAccess gaXtype) {
		this.grammarProvider = grammarProvider;
		this.gaXtype = gaXtype;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public XtypeGrammarAccess getXtypeGrammarAccess() {
		return gaXtype;
	}

	
	//Installer:
	//	"installer" identification=Identification ("by" authors+=Author*)? ("constraints" constraint=Constraint)? ("uninstall"
	//	("no" | uninstall=Uninstall))? ("log on" summarylog=STRING installation?="write installation info"?)?
	//	packaging=Packaging? variables+=Variable* packs+=Pack+ locale=Locale "display" panels+=Panel+;
	public InstallerElements getInstallerAccess() {
		return (pInstaller != null) ? pInstaller : (pInstaller = new InstallerElements());
	}
	
	public ParserRule getInstallerRule() {
		return getInstallerAccess().getRule();
	}

	//enum ISO3Code:
	//	cat="Catalunyan" | chn="Chinese" | cze="Czech" | dan="Danish" | glg="Galician" | deu="German" | eng="English" |
	//	eus="Basque" | fin="Finnish" | fra="French" | hun="Hungarian" | ita="Italian" | jpn="Japanese" | mys="Malaysian" |
	//	ned="Nederlands" | nor="Norwegian" | pol="Polnish" | por="Portuguese (Brazilian)" | prt="Portuguese (European)" |
	//	rom="Romanian" | rus="Russian" | scg="Serbian" | spa="Spanish" | svk="Slovakian" | swe="Swedish" | ukr="Ukrainian";
	public ISO3CodeElements getISO3CodeAccess() {
		return (unknownRuleISO3Code != null) ? unknownRuleISO3Code : (unknownRuleISO3Code = new ISO3CodeElements());
	}
	
	public EnumRule getISO3CodeRule() {
		return getISO3CodeAccess().getRule();
	}

	//Locale:
	//	"locale" isocodes+=ISO3Code+;
	public LocaleElements getLocaleAccess() {
		return (pLocale != null) ? pLocale : (pLocale = new LocaleElements());
	}
	
	public ParserRule getLocaleRule() {
		return getLocaleAccess().getRule();
	}

	//Identification:
	//	"for" name=STRING version=STRING ("site" url=STRING)? ("webroot" webdir=STRING)?;
	public IdentificationElements getIdentificationAccess() {
		return (pIdentification != null) ? pIdentification : (pIdentification = new IdentificationElements());
	}
	
	public ParserRule getIdentificationRule() {
		return getIdentificationAccess().getRule();
	}

	//Author:
	//	name=STRING email=STRING;
	public AuthorElements getAuthorAccess() {
		return (pAuthor != null) ? pAuthor : (pAuthor = new AuthorElements());
	}
	
	public ParserRule getAuthorRule() {
		return getAuthorAccess().getRule();
	}

	//Constraint:
	//	javaversion=STRING requiredJdk?="with jdk"? packed?="packed"?;
	public ConstraintElements getConstraintAccess() {
		return (pConstraint != null) ? pConstraint : (pConstraint = new ConstraintElements());
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}

	//Uninstall:
	//	("named" name=STRING)? / *("only if" condition=ID)? * / ("path" path=STRING)?;
	public UninstallElements getUninstallAccess() {
		return (pUninstall != null) ? pUninstall : (pUninstall = new UninstallElements());
	}
	
	public ParserRule getUninstallRule() {
		return getUninstallAccess().getRule();
	}

	//Option:
	//	name=STRING "=" value=STRING;
	public OptionElements getOptionAccess() {
		return (pOption != null) ? pOption : (pOption = new OptionElements());
	}
	
	public ParserRule getOptionRule() {
		return getOptionAccess().getRule();
	}

	//Packaging:
	//	"packaging" class=JvmTypeReference ("options" options+=Option*)?;
	public PackagingElements getPackagingAccess() {
		return (pPackaging != null) ? pPackaging : (pPackaging = new PackagingElements());
	}
	
	public ParserRule getPackagingRule() {
		return getPackagingAccess().getRule();
	}

	//Variable:
	//	("val" | isDynamic?="var") name=ID "=" value=STRING;
	public VariableElements getVariableAccess() {
		return (pVariable != null) ? pVariable : (pVariable = new VariableElements());
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}

	//enum OS:
	//	ALL="all" | UNIX="unix" | WINDOWS="windows" | MAC="mac";
	public OSElements getOSAccess() {
		return (unknownRuleOS != null) ? unknownRuleOS : (unknownRuleOS = new OSElements());
	}
	
	public EnumRule getOSRule() {
		return getOSAccess().getRule();
	}

	//enum OverrideFlag:
	//	TRUE="true" | FALSE="false" | ASKTRUE="asktrue" | ASKFALSE="askfalse" | update;
	public OverrideFlagElements getOverrideFlagAccess() {
		return (unknownRuleOverrideFlag != null) ? unknownRuleOverrideFlag : (unknownRuleOverrideFlag = new OverrideFlagElements());
	}
	
	public EnumRule getOverrideFlagRule() {
		return getOverrideFlagAccess().getRule();
	}

	//Pack:
	//	"pack" name=ID label=STRING optional?="optional"? loose?="loose"? keep?="keep"? parent=[Pack]? files+=File* ("on"
	//	os=OS)?;
	public PackElements getPackAccess() {
		return (pPack != null) ? pPack : (pPack = new PackElements());
	}
	
	public ParserRule getPackRule() {
		return getPackAccess().getRule();
	}

	//File:
	//	path=STRING ("as" alias=STRING)? "to" destination=STRING ("override" override=OverrideFlag)? => ("on" os=OS)?;
	public FileElements getFileAccess() {
		return (pFile != null) ? pFile : (pFile = new FileElements());
	}
	
	public ParserRule getFileRule() {
		return getFileAccess().getRule();
	}

	//Panel:
	//	name=ID classname=JvmTypeReference jar=STRING;
	public PanelElements getPanelAccess() {
		return (pPanel != null) ? pPanel : (pPanel = new PanelElements());
	}
	
	public ParserRule getPanelRule() {
		return getPanelAccess().getRule();
	}

	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} "[" "]")* | XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXtype.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//XFunctionTypeRef:
	//	("(" (paramTypes+=JvmTypeReference ("," paramTypes+=JvmTypeReference)*)? ")")? "=>" returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXtype.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//	type=[JvmType|QualifiedName] ("<" arguments+=JvmArgumentTypeReference ("," arguments+=JvmArgumentTypeReference)*
	//	">")?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXtype.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference returns JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXtype.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} "?" (constraints+=JvmUpperBound | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXtype.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//	"extends" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXtype.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded returns JvmUpperBound:
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXtype.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//	"super" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXtype.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmTypeParameter:
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded* | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXtype.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//QualifiedName:
	//	ValidID ("." ValidID)*;
	public XtypeGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXtype.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//ValidID:
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXtype.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaXtype.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaXtype.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaXtype.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaXtype.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXtype.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaXtype.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXtype.getANY_OTHERRule();
	} 
}
